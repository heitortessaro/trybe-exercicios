{"ast":null,"code":"import { CREATE_TASK, SELECT_TASK, COMPLETE_TASK, REMOVE_TASK, MOVE_TASK_UP, MOVE_TASK_DOWN, SAVE_TASKS, REMOVE_DONE_TASKS, REMOVE_ALL_TASKS } from '../actions/index';\nconst INITIAL_STATE = {\n  tasks: []\n};\n\nfunction selectTheTask(_ref, index) {\n  let {\n    tasks\n  } = _ref;\n  tasks.forEach((task, i) => {\n    tasks[i].selected = false;\n  });\n  tasks[index].selected = true;\n  console.log(tasks);\n  return tasks;\n}\n\nexport default function reducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case CREATE_TASK:\n      return { ...state,\n        tasks: [...state.tasks, action.payload]\n      };\n\n    case SELECT_TASK:\n      // const tasks = [...state.tasks];\n      // tasks.forEach((task, index) => {\n      //   tasks[index].selected = false;\n      // });\n      // tasks[action.payload].selected = true;\n      // console.log(tasks);\n      return { ...state,\n        tasks: selectTheTask(state, action.payload)\n      };\n\n    case COMPLETE_TASK:\n      console.log('Complete');\n      return state;\n\n    case REMOVE_TASK:\n      return state;\n\n    case MOVE_TASK_UP:\n      return state;\n\n    case MOVE_TASK_DOWN:\n      return state;\n\n    case SAVE_TASKS:\n      return state;\n\n    case REMOVE_DONE_TASKS:\n      return state;\n\n    case REMOVE_ALL_TASKS:\n      return state;\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/heitortessaro/trybe/trybe-exercicios/front-end/bloco-15-gerenciamento-de-estado-com-redux/dia-5-testes-em-react-redux/todo-list/src/reducers/index.js"],"names":["CREATE_TASK","SELECT_TASK","COMPLETE_TASK","REMOVE_TASK","MOVE_TASK_UP","MOVE_TASK_DOWN","SAVE_TASKS","REMOVE_DONE_TASKS","REMOVE_ALL_TASKS","INITIAL_STATE","tasks","selectTheTask","index","forEach","task","i","selected","console","log","reducer","state","action","type","payload"],"mappings":"AAAA,SACEA,WADF,EAEEC,WAFF,EAGEC,aAHF,EAIEC,WAJF,EAKEC,YALF,EAMEC,cANF,EAOEC,UAPF,EAQEC,iBARF,EASEC,gBATF,QAUO,kBAVP;AAYA,MAAMC,aAAa,GAAG;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAAtB;;AAEA,SAASC,aAAT,OAAkCC,KAAlC,EAAyC;AAAA,MAAlB;AAAEF,IAAAA;AAAF,GAAkB;AACvCA,EAAAA,KAAK,CAACG,OAAN,CAAc,CAACC,IAAD,EAAOC,CAAP,KAAa;AACzBL,IAAAA,KAAK,CAACK,CAAD,CAAL,CAASC,QAAT,GAAoB,KAApB;AACD,GAFD;AAGAN,EAAAA,KAAK,CAACE,KAAD,CAAL,CAAaI,QAAb,GAAwB,IAAxB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYR,KAAZ;AACA,SAAOA,KAAP;AACD;;AAED,eAAe,SAASS,OAAT,GAAgD;AAAA,MAA/BC,KAA+B,uEAAvBX,aAAuB;AAAA,MAARY,MAAQ;;AAC7D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKtB,WAAL;AACE,aAAO,EACL,GAAGoB,KADE;AAELV,QAAAA,KAAK,EAAE,CAAC,GAAGU,KAAK,CAACV,KAAV,EAAiBW,MAAM,CAACE,OAAxB;AAFF,OAAP;;AAIF,SAAKtB,WAAL;AACE;AACA;AACA;AACA;AACA;AACA;AACA,aAAO,EACL,GAAGmB,KADE;AAELV,QAAAA,KAAK,EAAEC,aAAa,CAACS,KAAD,EAAQC,MAAM,CAACE,OAAf;AAFf,OAAP;;AAIF,SAAKrB,aAAL;AACEe,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACA,aAAOE,KAAP;;AACF,SAAKjB,WAAL;AACE,aAAOiB,KAAP;;AACF,SAAKhB,YAAL;AACE,aAAOgB,KAAP;;AACF,SAAKf,cAAL;AACE,aAAOe,KAAP;;AACF,SAAKd,UAAL;AACE,aAAOc,KAAP;;AACF,SAAKb,iBAAL;AACE,aAAOa,KAAP;;AACF,SAAKZ,gBAAL;AACE,aAAOY,KAAP;;AACF;AACE,aAAOA,KAAP;AAjCJ;AAmCD","sourcesContent":["import {\n  CREATE_TASK,\n  SELECT_TASK,\n  COMPLETE_TASK,\n  REMOVE_TASK,\n  MOVE_TASK_UP,\n  MOVE_TASK_DOWN,\n  SAVE_TASKS,\n  REMOVE_DONE_TASKS,\n  REMOVE_ALL_TASKS,\n} from '../actions/index';\n\nconst INITIAL_STATE = { tasks: [] };\n\nfunction selectTheTask({ tasks }, index) {\n  tasks.forEach((task, i) => {\n    tasks[i].selected = false;\n  });\n  tasks[index].selected = true;\n  console.log(tasks);\n  return tasks\n}\n\nexport default function reducer(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case CREATE_TASK:\n      return {\n        ...state,\n        tasks: [...state.tasks, action.payload],\n      };\n    case SELECT_TASK:\n      // const tasks = [...state.tasks];\n      // tasks.forEach((task, index) => {\n      //   tasks[index].selected = false;\n      // });\n      // tasks[action.payload].selected = true;\n      // console.log(tasks);\n      return { \n        ...state,\n        tasks: selectTheTask(state, action.payload),\n      };\n    case COMPLETE_TASK:\n      console.log('Complete');\n      return state;\n    case REMOVE_TASK:\n      return state;\n    case MOVE_TASK_UP:\n      return state;\n    case MOVE_TASK_DOWN:\n      return state;\n    case SAVE_TASKS:\n      return state;\n    case REMOVE_DONE_TASKS:\n      return state;\n    case REMOVE_ALL_TASKS:\n      return state;\n    default:\n      return state;\n  }\n}"]},"metadata":{},"sourceType":"module"}